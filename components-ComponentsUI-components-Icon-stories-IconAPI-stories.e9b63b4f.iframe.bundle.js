"use strict";(self.webpackChunkhome_book_shared=self.webpackChunkhome_book_shared||[]).push([[401],{"./src/components/ComponentsUI/components/Icon/stories/IconAPI.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{IconAPI:()=>IconAPI,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _IconAPI$parameters,_IconAPI$parameters2,_Icon__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/ComponentsUI/components/Icon/Icon.tsx"),_stories_components_StoryApi_StoryApi__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/stories/components/StoryApi/StoryApi.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var description=["API documentation for the React Icon component. Learn about the available props. Icon is based on basic <code>props</code> from <code>HTMLAttributes<SVGSVGElement></code>"],tableBodyData=[{description:"Override or extend the styles applied to the component.",name:"className",type:"string"},{description:"Override or extend the styles applied to the path element.",name:"classNamePath",type:"string"},{defaultValue:"false",description:"If <code>true</code>, the component is clickable",name:"clickable",type:"boolean"},{defaultValue:"false",description:"If <code>true</code>, the component is disabled.",name:"disabled",type:"boolean"},{defaultValue:"false",description:"If <code>true</code>, the component is not focusable.",name:"disabledFocus",type:"boolean"},{description:"If <code>true</code>, the component does not trigger effect hover.",name:"disabledHover",type:"boolean"},{defaultValue:"E2EAttribute.icon",description:"Provide test-id.",name:"e2eAttribute",type:"E2EAttribute"},{description:"Provide value for test-id.",name:"e2eValue",type:"number | string"},{description:"Provide the color for fill in light mode",name:"fill",type:"string"},{description:"Provide the color for fill in dark mode",name:"fillDark",type:"string"},{defaultValue:"false",description:"If <code>true</code>, the component trigger hover without user affect.",name:"forcedHover",type:"boolean"},{description:"Provide the height for component",name:"height",type:"string"},{description:"Icon which represent the shape.",name:"iconComponent",type:"React.FC<TIconBasicProps>"},{description:"Type icon shape, should be compatible with component.",name:"iconShape",type:"IconShape"},{defaultValue:"false",description:"If <code>true</code>, the default styles will not be applied.",name:"ignoreDefaultStyles",type:"boolean"},{defaultValue:"false",description:"If <code>true</code>, the component will be selected.",name:"ignoreDefaultStyles",type:"boolean"},{description:"The <code>ref</code> is forwarded to the root element.",name:"ref",type:"Ref<HTMLElement>"},{description:"Provide the color for stroke in light mode",name:"stroke",type:"string"},{description:"Provide the color for stroke in dark mode",name:"strokeDark",type:"string"},{description:"Provide the with for component",name:"width",type:"string"}],blockCodeData={imports:[{items:"Icon",path:"./shared/ComponentsUI/components/Icon/Icon"}]};const __WEBPACK_DEFAULT_EXPORT__={component:_Icon__WEBPACK_IMPORTED_MODULE_0__.Z,parameters:{design:{type:"figma",url:"https://www.figma.com/file/ktOFYcPoVgYOeB3knUlHvE/Desings?type=design&node-id=504-2&mode=design&t=JrklSQ2xrS6SOqUP-0"},options:{showPanel:!1}},title:"Components/General/Icon/Icon API"};var Template=function Template(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_stories_components_StoryApi_StoryApi__WEBPACK_IMPORTED_MODULE_1__.Z,{blockCodeData,description,tableBodyData,title:"Icon API"})};Template.displayName="Template";var IconAPI=Template;IconAPI.parameters=_objectSpread(_objectSpread({},IconAPI.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_IconAPI$parameters=IconAPI.parameters)||void 0===_IconAPI$parameters?void 0:_IconAPI$parameters.docs),{},{source:_objectSpread({originalSource:"Template"},null===(_IconAPI$parameters2=IconAPI.parameters)||void 0===_IconAPI$parameters2||null===(_IconAPI$parameters2=_IconAPI$parameters2.docs)||void 0===_IconAPI$parameters2?void 0:_IconAPI$parameters2.source)})});var __namedExportsOrder=["IconAPI"]}}]);